name: Publish Release

on:
  workflow_dispatch:


jobs:
  # check_triggering_actor:
  #   name: Check user is allowed to create release
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: |
  #         if [[ "${{ github.triggering_actor }}" != "ahoppen" ]]; then
  #           echo "${{ github.triggering_actor }} is not allowed to create a release"
  #           exit 1
  #         fi
  # test_release:
  #   name: Test in Release configuration
  #   uses: swiftlang/github-workflows/.github/workflows/swift_package_test.yml@main
  #   needs: check_triggering_actor
  #   with:
  #     exclude_swift_versions: '[{"swift_version": "5.8"}, {"swift_version": "5.9"}, {"swift_version": "5.10"}, {"swift_version": "nightly-6.0"}]'
  #     build_command: "swift test -c release"
  define_tags:
    name: Determine dependent swift-syntax version and prerelease date
    runs-on: ubuntu-latest
    outputs:
      swift_syntax_tag: ${{ steps.swift_syntax_tag.outputs.swift_syntax_tag }}
      swift_format_version: ${{ steps.swift_format_version.outputs.swift_format_version }}
    steps:
    - name: Determine swift-syntax tag to depend on
      id: swift_syntax_tag
      run: echo "swift_syntax_tag=601.0.0-prerelease-2024-09-25" >> "$GITHUB_OUTPUT"
    - name: Determine swift-format prerelease version
      id: swift_format_version
      run: echo "swift_format_version=601.0.0-prerelease-$(date +'%Y-%m-%d_%H-%M-%S')" >> "$GITHUB_OUTPUT"
  # test_configurations:
  #   name: Test in Debug configuration
  #   needs: check_triggering_actor
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: true
  #     matrix:
  #       swift_version: ['6.0']
  #       os_version: [jammy]
  #       command: ["swift test"]
  #   container:
  #     image: ${{ (contains(matrix.swift_version, 'nightly') && 'swiftlang/swift') || 'swift' }}:${{ matrix.swift_version }}-${{ matrix.os_version }}
  #   steps:
  #   - name: Swift version
  #     run: swift --version
  #   - name: Checkout repository
  #     uses: actions/checkout@v4
  #   - name: Create release commits
  #     uses: ./.github/actions/patch-release
  #     with:
  #       swift_syntax_tag: 601.0.0-prerelease-2024-09-25
  #       swift_format_version: ${{ steps.date.outputs.tag_name }}
  #   - name: Set environment variables
  #     if: ${{ inputs.env_vars }}
  #     run: |
  #         for i in "${{ inputs.env_vars }}"
  #         do
  #           printf "%s\n" $i >> $GITHUB_ENV
  #         done
  #   - name: Pre-build
  #     run: ${{ inputs.pre_build_command }}
  #   - name: Build
  #     run: ${{ inputs.build_command }} ${{ (contains(matrix.swift_version, 'nightly') && inputs.swift_nightly_flags) || inputs.swift_flags }}
  publish_release:
    name: Create Tag
    runs-on: ubuntu-latest
    # needs: [test_debug, test_release]
    # needs: [test_debug]
    needs: [define_tags]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Patch release
      uses: ./.github/actions/patch-release
      with:
        swift_syntax_tag: ${{ needs.define_tags.outputs.swift_syntax_tag }}
        swift_format_version: ${{ needs.define_tags.outputs.swift_format_version }}
    - name: Tag release
      run: |
        git tag "${{ needs.define_tags.outputs.swift_format_version }}"
        git push origin "${{ needs.define_tags.outputs.swift_format_version }}"


    # - name: Release snapshot
    #   id: release-snapshot
    #   uses: actions/create-release@latest
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: "600.0.0-prerelease-${{ steps.date.outputs.date }}"
    #     release_name: "600.0.0-prerelease-${{ steps.date.outputs.date }}"
    #     draft: false
    #     prerelease: true
